@model WebApplicationLib.Models.Library_catalog
@{
    ViewBag.Title = "Edit";
}
<h2>Редактировать</h2>


@using (Html.BeginForm(Html.BeginForm("Edit", "Library_catalog", null, FormMethod.Post, new { enctype = "multipart/form-data" })))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>книгу в библиотечном каталоге</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            <div class="control-label col-md-2">
                Название
            </div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="control-label col-md-2">
                Обложка книги
            </div>
            <div class="col-md-10">
                @if (Model.Photo == null)
                {
                    @:None
                }
                else
                {
                    byte[] photo = Model.Photo;
                    string imageSrc = null;
                    if (photo != null)
                    {
                        MemoryStream ms = new MemoryStream();
                        ms.Write(photo, 0, photo.Length);
                        string imageBase64 = Convert.ToBase64String(ms.ToArray());
                        imageSrc = string.Format("data:image/jpg;base64,{0}", imageBase64);
                        string base64String = Convert.ToBase64String(photo, 0, photo.Length);
                    }

                    <img width="200" height="300" src="@imageSrc" />
                }
                <div>Выбрать новую фотографию: <input type="file" name="upload" /></div>
            </div>
        </div>


        <div class="form-group">
            <div class="control-label col-md-2">
                Библиотечный шифр
            </div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Library_cipher, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Library_cipher, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="control-label col-md-2">
                Год публикации
            </div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Year_of_publication, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Year_of_publication, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="control-label col-md-2">
                Место издательства
            </div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Place_of_publication, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Place_of_publication, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="control-label col-md-2">
                Издательство
            </div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Publishing_house_name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Publishing_house_name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="control-label col-md-2">
                Всего в библиотеке
            </div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Total, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Total, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="control-label col-md-2">
                В библиотеке сейчас
            </div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Number_of_available, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Number_of_available, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Сохранить" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Вернуться к списку", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}