@model WebApplicationLib.Models.Register_of_copies


@{
    ViewBag.Title = "Create";
}

<h2>Создать</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>новую запись в реестре экземпляров</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <div class="control-label col-md-2">
                Код записи
            </div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="control-label col-md-2">
                Кому отдана книга
            </div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Issued_to, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Issued_to, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="control-label col-md-2">
                Когда отдана
            </div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.When_issued, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.When_issued, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="control-label col-md-2">
                Когда должна быть возвращена
            </div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.When_must_be_returned, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.When_must_be_returned, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="control-label col-md-2">
                Возвращена ли
            </div>
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Is_returned)
                    @Html.ValidationMessageFor(model => model.Is_returned, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="control-label col-md-2">
                Предыдущий читатель
            </div>
            <div class="col-md-10">
                @Html.DropDownList("Last_reader", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Last_reader, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="control-label col-md-2">
                Оплачен ли штраф
            </div>
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Fine_paid)
                    @Html.ValidationMessageFor(model => model.Fine_paid, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="control-label col-md-2">
                Название книги
            </div>
            <div class="col-md-10">
                @Html.DropDownList("Library_catalog_Id", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Library_catalog_Id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Добавить" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Вернуться к списку", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

